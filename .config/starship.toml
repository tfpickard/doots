# ╔═══════════════════════════════════════════════════════════════════╗
# ║                    STARSHIP COMMAND CONSOLE                      ║
# ║                   Synthwave Edition v4.0                         ║
# ║                  Neon Dreams Configuration                       ║
# ╚═══════════════════════════════════════════════════════════════════╝

# ═══════════════════════════════════════════════════════════════════
# CORE ARCHITECTURE - SIMPLIFIED & WORKING
# ═══════════════════════════════════════════════════════════════════

format = """
[╭┄](bright-black)\
$os \
┄\
$directory\
┄┄ \
 ⟨ \
$git_branch\
$git_status\
$git_metrics\
 ⟩ \
$fill\
$cmd_duration\
┄\
$jobs\
┄ \
$battery\
┄\
$memory_usage\
┄\
$time\
$line_break\
[╰┄➤](bright-black) """

right_format = """
$python\
$rust\
$nodejs\
$go\
$c\
$java\
$docker_context\
"""

continuation_prompt = "[┄┄➜](bright-black) "
scan_timeout = 30
add_newline = true

# ═══════════════════════════════════════════════════════════════════
# COMMAND CHARACTER - CLEAN MISSILES
# ═══════════════════════════════════════════════════════════════════

[character]
success_symbol = "[➤](bright-blue)"
error_symbol = "[⤿](bright-red)"
vimcmd_symbol = "[◂](purple)"
vimcmd_replace_one_symbol = "[▶](magenta)"
vimcmd_replace_symbol = "[▷](magenta)"
vimcmd_visual_symbol = "[󰈈](bright-cyan)"

# ═══════════════════════════════════════════════════════════════════
# NAVIGATION SYSTEMS
# ═══════════════════════════════════════════════════════════════════

[directory]
format = " [$path]($style)[$read_only]($read_only_style) "
style = "cyan"
read_only = ""
read_only_style = "bright-magenta"
truncation_length = 8
truncate_to_repo = true
truncation_symbol = "/"
home_symbol = ""

[directory.substitutions]
"Documents" = "docs"
"Downloads" = "dl"
"src" = "src"
"work" = "work"
"projects" = "proj"

# ═══════════════════════════════════════════════════════════════════
# VERSION CONTROL INTELLIGENCE
# ═══════════════════════════════════════════════════════════════════

[git_branch]
format = "[$symbol$branch]($style) "
symbol = ""
style = "magenta"
truncation_length = 20
truncation_symbol = "⸱⸱⸱"

[git_status]
format = '([$all_status$ahead_behind]($style) )'
style = "purple"
ahead = "⇗${count}"
behind = "⇙${count}"
diverged = "⫷⇗${ahead_count}⇙${behind_count}"
conflicted = "⚠${count}"
deleted = "⊗${count}"
renamed = "↦${count}"
modified = "⚹${count}"
staged = "⊕${count}"
untracked = "⊘${count}"
stashed = "⧆${count}"

[git_metrics]
format = '([$added]($added_style))([$deleted]($deleted_style) )'
added_style = "green"
deleted_style = "bright-magenta"
only_nonzero_diffs = true
disabled = false

# ═══════════════════════════════════════════════════════════════════
# SYSTEM MONITORING - BUILT-IN MODULES ONLY
# ═══════════════════════════════════════════════════════════════════

[cmd_duration]
format = "󰔟 [$duration]($style) "
style = "bright-cyan"
min_time = 2000
show_milliseconds = false

[jobs]
format = "[$symbol$number]($style) "
symbol = ""
style = "yellow"
number_threshold = 1

[battery]
format = "[$symbol $percentage]($style) "
charging_symbol = "󰂄"
discharging_symbol = "󱧦"
unknown_symbol = "󰂑"
empty_symbol = "󱃍"

[[battery.display]]
threshold = 20
style = "bright-magenta"
charging_symbol = "▲ "
discharging_symbol = "▼ "

[[battery.display]]
threshold = 50
style = "magenta"

[[battery.display]]
threshold = 100
style = "purple"

[memory_usage]
format = "󰍛 [$ram]($style) "
style = "bright-cyan"
threshold = 0
disabled = false

[time]
format = " [$time]($style)"
style = "bright-black"
time_format = "%H·%M·%S"
disabled = false

# ═══════════════════════════════════════════════════════════════════
# DEVELOPMENT ENVIRONMENTS - SIMPLIFIED
# ═══════════════════════════════════════════════════════════════════

[c]
format = " [$symbol$version]($style) "
symbol = "ℂ "
style = "bright-cyan"
detect_extensions = ["c", "h"]
detect_files = ["Makefile", "CMakeLists.txt"]

[python]
format = ' [$symbol$version]($style) '
symbol = "󱔎"
style = "green"
detect_extensions = ["py"]
detect_files = ["requirements.txt", "pyproject.toml", "setup.py"]

[rust]
format = " [$symbol$version]($style) "
symbol = " "
style = "bright-magenta"
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]

[nodejs]
format = " [$symbol$version]($style) "
symbol = ""
style = "green"
detect_extensions = ["js", "mjs", "cjs", "ts"]
detect_files = ["package.json"]

[go]
format = " [$symbol$version]($style) "
symbol = ""
style = "cyan"
detect_extensions = ["go"]
detect_files = ["go.mod"]

[java]
format = " [$symbol$version]($style) "
symbol = ""
style = "purple"
detect_extensions = ["java", "class", "jar"]
detect_files = ["pom.xml", "build.gradle"]

[docker_context]
format = " [$symbol$context]($style) "
symbol = ""
style = "magenta"
only_with_files = true
detect_files = ["docker-compose.yml", "Dockerfile"]

# ═══════════════════════════════════════════════════════════════════
# OS SYMBOLS - CRYPTIC STYLE
# ═══════════════════════════════════════════════════════════════════

[os]
format = "[$symbol]($style) "
style = "bright-magenta"
disabled = false

[os.symbols]
Linux = ""
Macos = ""
Windows = ""
Ubuntu = ""
Debian = ""
Fedora = ""
Arch = ""
Unknown = "◦"
#
# ═══════════════════════════════════════════════════════════════════
# FILL CHARACTER
# ═══════════════════════════════════════════════════════════════════

[fill]
symbol = "┄"
style = "purple"

# ═══════════════════════════════════════════════════════════════════
# DISABLED MODULES - PERFORMANCE OPTIMIZATION
# ═══════════════════════════════════════════════════════════════════

[hostname]
disabled = false

[username]
disabled = false

[aws]
disabled = false

[azure]
disabled = true

[gcloud]
disabled = true

[kubernetes]
disabled = true

[terraform]
disabled = true

[vagrant]
disabled = true

[nix_shell]
disabled = true

[conda]
disabled = false

[env_var]
disabled = false

# ═══════════════════════════════════════════════════════════════════
# END CONFIGURATION
# ═══════════════════════════════════════════════════════════════════

# Synthwave Engineering Edition - Mathematical Glyph Configuration
# Features smooth curved connectors: ╭┄ and ╰┄➤
# 
# Mathematical/Logical Unicode Glyphs:
#  = composition (replaces "at" and "via") ∈ = element of (replaces "on") 
# ⟨⟩ = angle brackets (replaces [])        ° = degree (replaces %)
# ⌬ = memory symbol (replaces "mem")       · = dots (replaces ":")
# ⧖ = duration (replaces "took")           ℂ = stylized C (C language)
#  = official Python logo (Nerd Font)
# 
# All arrows are engineering/mechanical drawing style:
# ➤ ▶ ◂ ▲ ▼ ◆ ⤞ ↷ ▷ - Clean, precise, technical
# 
# Installation:
# 1. Save as ~/.config/starship.toml
# 2. Restart terminal
#
# ╰┄➤ Ready for mathematical symbol excellence.

# ═══════════════════════════════════════════════════════════════════
# CORRECTED GHOSTTY CONFIG
# ═══════════════════════════════════════════════════════════════════
# Save to ~/.config/ghostty/config:
#
# font-family = Monaspace Neon
# font-size = 14
# 
# Note: Ghostty uses system font fallback automatically.
# Install Nerd Fonts and they'll be used for missing glyphs:
# brew install font-jetbrains-mono-nerd-font
